package com.nitendragautam.mapreduce;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Reducer;

import java.io.IOException;

/**
 * Takes the Client IP address and counts its occurances
 * takes the intermediate key/value pairs generated by the mapper
 * class and sums up the occurence of Client IP address
 */
public class LogAnalyticsReducer extends
        Reducer<Text,IntWritable,Text ,IntWritable>{

    private IntWritable result = new IntWritable();

    public void reduce(Text key ,Iterable<IntWritable> values
            ,Context context) throws IOException , InterruptedException{
int sumOfIPAddressOccurance = 0;

//Iterating every IP address
/**Result of the Reducer
         *  (192.134.56.71 ,1)
         *  (192.135.68.72, 2)
         */

        for (IntWritable val : values) {
  //Count and Add the Occurance of Every Ip Address
            sumOfIPAddressOccurance += val.get();
        }
        result.set(sumOfIPAddressOccurance);
        context.write(key ,result);  // Writes the Results back to HDFS 

    }

}
